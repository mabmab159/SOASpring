package pe.mijael.autosservice.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.0.3
 * 2023-11-19T19:46:01.975-05:00
 * Generated source version: 4.0.3
 *
 */
@WebServiceClient(name = "AutosService",
                  wsdlLocation = "file:/C:/Users/Miguel/Desktop/soa/src/main/resources/wsdl/AutosService.wsdl",
                  targetNamespace = "http://mijael.pe/AutosService/wsdl")
public class AutosService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://mijael.pe/AutosService/wsdl", "AutosService");
    public final static QName AutosServiceSOAPBinding = new QName("http://mijael.pe/AutosService/wsdl", "AutosServiceSOAPBinding");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Miguel/Desktop/soa/src/main/resources/wsdl/AutosService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AutosService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/Miguel/Desktop/soa/src/main/resources/wsdl/AutosService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AutosService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AutosService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AutosService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public AutosService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AutosService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AutosService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns AutosServicePort
     */
    @WebEndpoint(name = "AutosServiceSOAPBinding")
    public AutosServicePort getAutosServiceSOAPBinding() {
        return super.getPort(AutosServiceSOAPBinding, AutosServicePort.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AutosServicePort
     */
    @WebEndpoint(name = "AutosServiceSOAPBinding")
    public AutosServicePort getAutosServiceSOAPBinding(WebServiceFeature... features) {
        return super.getPort(AutosServiceSOAPBinding, AutosServicePort.class, features);
    }

}
